---
export interface Props {
  title: string;
  description?: string;
  icon?: string;
  variant?: 'default' | 'highlighted' | 'minimal';
  class?: string;
}

const {
  title,
  description,
  icon = "ðŸ’­",
  variant = 'default',
  class: className = ""
} = Astro.props;

const variantClasses = {
  default: "bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm border border-gray-200/60 dark:border-gray-700/60 hover:border-blue-300/40 dark:hover:border-blue-600/40 hover:shadow-lg hover:shadow-blue-500/10 dark:hover:shadow-blue-400/10",
  highlighted: "bg-gradient-to-br from-blue-50/80 to-purple-50/60 dark:from-blue-900/20 dark:to-purple-900/10 border border-blue-200/60 dark:border-blue-700/60 hover:border-blue-300/80 dark:hover:border-blue-600/80 hover:shadow-xl hover:shadow-blue-500/20 dark:hover:shadow-blue-400/20",
  minimal: "bg-white/60 dark:bg-gray-800/60 backdrop-blur-sm border border-gray-100/80 dark:border-gray-700/80 hover:border-gray-300/60 dark:hover:border-gray-600/60 hover:bg-white/80 dark:hover:bg-gray-800/80"
};
---

<div class={`
  ${variantClasses[variant]}
  rounded-xl p-6
  hover-lift
  transition-all duration-300 ease-out
  animate-on-scroll
  group relative overflow-hidden
  ${className}
`}>
  <div class="relative z-10">
    <div class="flex items-start space-x-4">
      {icon && (
        <div class="text-3xl flex-shrink-0 transform transition-transform duration-300 group-hover:scale-110">
          {icon}
        </div>
      )}
      <div class="flex-1 space-y-3">
        <h3 class="font-semibold text-lg text-gray-900 dark:text-white leading-tight group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-300">
          {title}
        </h3>
        {description && (
          <p class="text-gray-600 dark:text-gray-300 leading-relaxed text-sm">
            {description}
          </p>
        )}
        <div class="space-y-3">
          <slot />
        </div>
      </div>
    </div>
  </div>
</div>