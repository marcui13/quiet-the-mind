---
import LanguageSwitcher from './LanguageSwitcher.astro';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { pathname } = Astro.url;

// Remove language prefix for comparison
const cleanPath = pathname.replace(/^\/[a-z]{2}/, '') || '/';

const navLinks = [
  { href: "/", label: t('nav.home') },
  { href: "/topics", label: t('nav.topics') },
  { href: "/types", label: t('nav.types') },
  { href: "/causes", label: t('nav.causes') },
  { href: "/strategies", label: t('nav.strategies') },
  { href: "/myths", label: t('nav.myths') },
  { href: "/resources", label: t('nav.resources') },
];

// Adjust hrefs based on current language
const localizedNavLinks = navLinks.map(link => ({
  ...link,
  href: lang === 'en' ? link.href : `/${lang}${link.href}`
}));
---

<header class="bg-white/80 backdrop-blur-md border-b border-gray-200 dark:bg-gray-900/80 dark:border-gray-700 sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo/Brand -->
      <a href={lang === 'en' ? '/' : `/${lang}`} class="flex items-center space-x-3 group">
        <div class="text-2xl transform transition-transform duration-300 group-hover:scale-110 group-hover:rotate-12">
          🧘‍♂️
        </div>
        <div>
          <h1 class="text-xl font-bold text-gray-900 dark:text-white leading-tight">
            Quiet the Mind
          </h1>
          <p class="text-xs text-gray-600 dark:text-gray-400 font-medium">
            Mental Wellness
          </p>
        </div>
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-8 items-center">
        {localizedNavLinks.map(({ href, label }) => (
          <a
            href={href}
            class={`text-sm font-medium transition-colors hover:text-blue-600 dark:hover:text-blue-400 ${
              cleanPath === href.replace(/^\/[a-z]{2}/, '') || (cleanPath === '/' && href.endsWith('/'))
                ? 'text-blue-600 dark:text-blue-400'
                : 'text-gray-700 dark:text-gray-300'
            }`}
          >
            {label}
          </a>
        ))}
        <LanguageSwitcher />
      </nav>

      <!-- Mobile menu button -->
      <button
        id="mobile-menu-btn"
        class="md:hidden p-2 rounded-lg text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
        aria-label="Toggle menu"
      >
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden pb-4">
      <div class="space-y-2">
        {localizedNavLinks.map(({ href, label }) => (
          <a
            href={href}
            class={`block px-3 py-2 rounded-lg text-base font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${
              cleanPath === href.replace(/^\/[a-z]{2}/, '') || (cleanPath === '/' && href.endsWith('/'))
                ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-gray-800'
                : 'text-gray-700 dark:text-gray-300'
            }`}
          >
            {label}
          </a>
        ))}
        <div class="pt-2 border-t border-gray-200 dark:border-gray-700 mt-4">
          <LanguageSwitcher />
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuBtn && mobileMenu) {
    mobileMenuBtn.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }
</script>